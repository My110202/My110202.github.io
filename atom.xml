<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mayue</title>
  
  <subtitle>每天都要记得学习哦</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-29T05:55:09.865Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mayue</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git命令</title>
    <link href="http://yoursite.com/2020/06/06/git%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2020/06/06/git%E5%91%BD%E4%BB%A4/</id>
    <published>2020-06-06T15:45:42.249Z</published>
    <updated>2020-05-29T05:55:09.865Z</updated>
    
    <content type="html"><![CDATA[<h3 id="git-bash-unix与linux风格的命令行-使用最多"><a href="#git-bash-unix与linux风格的命令行-使用最多" class="headerlink" title="git bash: unix与linux风格的命令行(使用最多)"></a>git bash: unix与linux风格的命令行(使用最多)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cd: 切换目录</span><br><span class="line">cd ~回到home(最顶层目录)</span><br><span class="line">cd 直接cd回到默认目录</span><br><span class="line">cd ..回到上一级目录</span><br><span class="line">pwd查看当前所在目录路径</span><br><span class="line">ls(ll)都是列出当前目录中的所有文件,区别是ll列出的内容更为详细(包括时间)</span><br><span class="line">mkdir hellow新建一个文件夹(hello文件夹)</span><br><span class="line">touch index.js新建一个文件(index.js)</span><br><span class="line">rm -r删除一个文件夹(rm -r hello 删除hello文件夹)</span><br><span class="line">mv移动文件</span><br><span class="line">mv test hello移动test文件到hello文件夹</span><br><span class="line">reset重新初始化终端/清屏</span><br><span class="line">clear清屏</span><br><span class="line">history查看历史动作</span><br><span class="line">help帮助</span><br><span class="line">exit退出命令框</span><br><span class="line">cat hello显示hello文件内容</span><br></pre></td></tr></table></figure><h3 id="git配置"><a href="#git配置" class="headerlink" title="git配置"></a>git配置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config -l查看现在的git环境的详细配置</span><br></pre></td></tr></table></figure><h3 id="git工作流程"><a href="#git工作流程" class="headerlink" title="git工作流程"></a>git工作流程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.在工作目录中添加,修改文件</span><br><span class="line">2.将需要进行版本管理的文件放入暂存区</span><br><span class="line">3.将暂存区的文件提交到git仓库</span><br><span class="line">因此,git管理的文件由三种状态:已修改(modified),已暂存(staged),已提交(committed)</span><br><span class="line">step1:git add添加到暂存区</span><br><span class="line">step2:git commit提交到仓库</span><br><span class="line">step3:git push推送到远程仓库</span><br></pre></td></tr></table></figure><h3 id="查看文件状态"><a href="#查看文件状态" class="headerlink" title="查看文件状态"></a>查看文件状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">四种状态</span><br><span class="line">untracked: 未跟踪,不被git管理的文件,通过git add 文件名 命令,状态变为staged</span><br><span class="line">unmodify: 未修改,被git管理,此时文件的内容与版本库中的文件内容一致,这种类型的文件由两种去除,如果被修改,状态就变为modified,如果使用git rm &#39;文件名&#39; 移出版本库,状态变成untraked</span><br><span class="line">modified: 修改过的,有两个去向,使用git add &#39;文件名&#39; 将文件暂存起来,另一个是使用git checkout 则丢弃修改,状态变为unmodified</span><br><span class="line">staged: 暂存状态,有两个去向,使用git commit -m&quot;&quot;提交到仓库,此时库中的文件和本地的一致,文件状态变为unmodified,另一个使用git reset HEAD &#39;文件名&#39; 取消暂存,文件状态变为unmodified</span><br><span class="line">git status查看所有文件状态</span><br><span class="line">git status hello查看hello文件状态</span><br></pre></td></tr></table></figure><h3 id="git-取消文件跟踪"><a href="#git-取消文件跟踪" class="headerlink" title="git 取消文件跟踪"></a>git 取消文件跟踪</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">对某个文件取消跟踪</span><br><span class="line">git rm --cached hello.vue取消hello.vue的跟踪,本地hello.vue这个文件还有</span><br><span class="line">git rm --f hello.vue取消hello.vue的跟踪,并在本地把hello.vue这个文件删除</span><br><span class="line">对所有文件都取消跟踪</span><br><span class="line">git rm -r --cached .取消所有文件的跟踪,但是本地还有这些文件</span><br><span class="line">git rm -r --f .取消所有文件的跟踪,并且删除了本地文件</span><br></pre></td></tr></table></figure><h3 id="git-丢弃已修改的文件"><a href="#git-丢弃已修改的文件" class="headerlink" title="git 丢弃已修改的文件"></a>git 丢弃已修改的文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">丢弃某个文件的修改</span><br><span class="line">git checkout -- hello.vue丢弃hello.vue的修改</span><br><span class="line">丢弃所有文件的修改</span><br><span class="line">git checkout .</span><br><span class="line">本地新增了一些文件,没有git add 到暂存区,想放弃修改</span><br><span class="line">rm hello.js删除hello.js文件</span><br></pre></td></tr></table></figure><h3 id="撤销git-add-撤销已添加至暂存区的文件"><a href="#撤销git-add-撤销已添加至暂存区的文件" class="headerlink" title="撤销git add  (撤销已添加至暂存区的文件)"></a>撤销git add  (撤销已添加至暂存区的文件)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD hello.js撤销已经add到暂存区的hello.js</span><br><span class="line">git reset HEAD .撤销add到暂存区的所有文件</span><br></pre></td></tr></table></figure><h3 id="git-add-添加文件与目录"><a href="#git-add-添加文件与目录" class="headerlink" title="git add 添加文件与目录"></a>git add 添加文件与目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git add .添加当前目录的所有文件到暂存区</span><br><span class="line">git add --all添加所有的文件</span><br><span class="line">以下是添加指定文件夹或文件到暂存区</span><br><span class="line">git add hello添加hello文件夹(包括子目录)到暂存区(要先进入到hello文件夹的父文件夹)</span><br><span class="line">git add test.js添加test.js文件到暂存区(要先进入到hello文件夹的父文件夹)</span><br><span class="line">git reset HEAD test.js撤销刚刚的git add操作</span><br></pre></td></tr></table></figure><h3 id="在本地新建分支首次推送到远程-在本地新建分支之后要先推送到远程"><a href="#在本地新建分支首次推送到远程-在本地新建分支之后要先推送到远程" class="headerlink" title="在本地新建分支首次推送到远程(在本地新建分支之后要先推送到远程)"></a>在本地新建分支首次推送到远程(在本地新建分支之后要先推送到远程)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">当在本地新建一个fb-dev分支,git push时会提示 git push --set-upstream origin fb-dev</span><br><span class="line">出现这个提示的原因: 因为在远程没有与本地fb-dev相对应的分支</span><br><span class="line">所以第一次git push时会提示</span><br><span class="line">使用git push --set-upstream origin fb-dev这个命令推送分支后,以后再推送fb-dev分支的时候就可以直接使用git push了</span><br><span class="line">git push --set-upstream origin fb-dev 的缩写形式为 git push -u origin fb-dev</span><br></pre></td></tr></table></figure><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git branch devmy 创建一个分支(devmy分支)</span><br><span class="line">git branch -d devmy 删除分支(devmy)</span><br><span class="line">git push origin --<span class="keyword">delete</span> devmy 删除远程分支devmy</span><br><span class="line">git checkout devmy 切换分支(切换到devmy分支)</span><br><span class="line">git branch 查看当前所在分支</span><br><span class="line">git branch -a 查看所有分支</span><br><span class="line"></span><br><span class="line">git checkout -b fb-form origin/fb-form把远程fb-form分支拉取到本地并直接切换到本地fb-form分支</span><br><span class="line">git checkout -b fb-workorder origin从远程master拉取一个新的分支</span><br></pre></td></tr></table></figure><h3 id="回退版本"><a href="#回退版本" class="headerlink" title="回退版本"></a>回退版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard  HEAD^回退到上一版本</span><br></pre></td></tr></table></figure><h3 id="git-stash-用法"><a href="#git-stash-用法" class="headerlink" title="git stash 用法"></a>git stash 用法</h3><ul><li>git stash 命令将当前的工作状态保存到git 栈,在需要的时候再恢复</li></ul><h4 id="git-stash"><a href="#git-stash" class="headerlink" title="git stash"></a>git stash</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">保存当前的工作区与暂存区的状态，把当前的工作隐藏起来，等以后需要的时候再恢复,git stash 这个命令可以多次使用，每次使用都会新加一个stash@&#123;num&#125;，num是编号</span><br></pre></td></tr></table></figure><h4 id="git-stash-save"><a href="#git-stash-save" class="headerlink" title="git stash save"></a>git stash save</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">作用同git stash, 区别是可以加注释</span><br><span class="line">如:git stash save &quot;your stash message&quot;</span><br></pre></td></tr></table></figure><h4 id="git-stash-pop"><a href="#git-stash-pop" class="headerlink" title="git stash pop"></a>git stash pop</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">默认恢复git stash栈中最新的一个stash@&#123;num&#125;,建议在git栈中只有一条的时候时候,以免混乱</span><br></pre></td></tr></table></figure><h4 id="git-stash-list"><a href="#git-stash-list" class="headerlink" title="git stash list"></a>git stash list</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">查看所有被隐藏的文件列表</span><br></pre></td></tr></table></figure><h4 id="git-stash-apply"><a href="#git-stash-apply" class="headerlink" title="git stash apply"></a>git stash apply</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恢复被隐藏的文件, 但是在git栈中的这个不删除,用法: git stash apply@&#123;0&#125;</span><br></pre></td></tr></table></figure><h4 id="git-stash-drop"><a href="#git-stash-drop" class="headerlink" title="git stash drop"></a>git stash drop</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">删除指定的一个进度,默认删除最新的进度,用法:git stash drop stash@&#123;0&#125;</span><br></pre></td></tr></table></figure><h4 id="git-stash-clear"><a href="#git-stash-clear" class="headerlink" title="git stash clear"></a>git stash clear</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">删除所有存储的进度</span><br></pre></td></tr></table></figure><h4 id="git-stash-show"><a href="#git-stash-show" class="headerlink" title="git stash show"></a>git stash show</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">显示stash的具体内容是什么,用法:git stash show stash@&#123;0&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;git-bash-unix与linux风格的命令行-使用最多&quot;&gt;&lt;a href=&quot;#git-bash-unix与linux风格的命令行-使用最多&quot; class=&quot;headerlink&quot; title=&quot;git bash: unix与linux风格的命令行(使用最多)
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Post</title>
    <link href="http://yoursite.com/2020/06/06/Post/"/>
    <id>http://yoursite.com/2020/06/06/Post/</id>
    <published>2020-06-06T15:38:09.000Z</published>
    <updated>2020-06-06T15:38:09.523Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/06/06/hello-world/"/>
    <id>http://yoursite.com/2020/06/06/hello-world/</id>
    <published>2020-06-06T13:28:40.503Z</published>
    <updated>2020-06-06T13:28:40.504Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
